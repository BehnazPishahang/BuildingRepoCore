// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221206063931_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Building.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloorCount")
                        .HasColumnType("int");

                    b.Property<int?>("Plaque")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Domain.Cost.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BUILDINGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("COSTTYPEID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OBJECTSTATEID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BUILDINGID");

                    b.HasIndex("COSTTYPEID");

                    b.HasIndex("OBJECTSTATEID");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("Domain.Cost.CostType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CostTypes");
                });

            modelBuilder.Entity("Domain.ObjectState.ObjectState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObjectStates");
                });

            modelBuilder.Entity("Domain.Cost.Cost", b =>
                {
                    b.HasOne("Domain.Building.Building", "TheBuilding")
                        .WithMany("TheCostList")
                        .HasForeignKey("BUILDINGID");

                    b.HasOne("Domain.Cost.CostType", "TheCostType")
                        .WithMany()
                        .HasForeignKey("COSTTYPEID");

                    b.HasOne("Domain.ObjectState.ObjectState", "TheObjectState")
                        .WithMany()
                        .HasForeignKey("OBJECTSTATEID");

                    b.Navigation("TheBuilding");

                    b.Navigation("TheCostType");

                    b.Navigation("TheObjectState");
                });

            modelBuilder.Entity("Domain.Building.Building", b =>
                {
                    b.Navigation("TheCostList");
                });
#pragma warning restore 612, 618
        }
    }
}
